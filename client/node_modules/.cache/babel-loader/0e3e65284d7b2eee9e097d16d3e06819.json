{"ast":null,"code":"import { POST_SIGNUP, POST_SIGNIN, GET_VERIFY_NICKNAME, RESET_VERIFY_NICKNAME, RESET_SIGNIN, RESET } from '../actions/types';\nconst initialState = {\n  isFetching: false,\n  errors: {}\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case POST_SIGNIN:\n      return { ...state,\n        isFetching: true\n      };\n\n    case POST_SIGNUP:\n      return { ...state,\n        ...action.info,\n        isFetching: true\n      };\n\n    case RESET_SIGNIN:\n      return { ...state,\n        isFetching: false,\n        errors: {}\n      };\n\n    case POST_SIGNUP:\n      return { ...state,\n        isFetching: false\n      };\n\n    case GET_VERIFY_NICKNAME:\n      return { ...state,\n        isFetching: true,\n        ...actions.params\n      };\n\n    case RESET_VERIFY_NICKNAME:\n      return { ...state,\n        isFetching: false\n      };\n\n    case RESET:\n      return state;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/JavascriptProjects2/socketChatApp/client/src/reducers/auth.js"],"names":["POST_SIGNUP","POST_SIGNIN","GET_VERIFY_NICKNAME","RESET_VERIFY_NICKNAME","RESET_SIGNIN","RESET","initialState","isFetching","errors","state","action","type","info","actions","params"],"mappings":"AAAA,SACCA,WADD,EAECC,WAFD,EAGCC,mBAHD,EAICC,qBAJD,EAKIC,YALJ,EAMIC,KANJ,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;AAKA,gBAAe,CAACC,KAAK,GAACH,YAAP,EAAoBI,MAApB,KAA+B;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKJ,SAAKP,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHL,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAMH,SAAKH,YAAL;AACE,aAAO,EACD,GAAGK,KADF;AAEDF,QAAAA,UAAU,EAAE,KAFX;AAGDC,QAAAA,MAAM,EAAE;AAHP,OAAP;;AAMF,SAAKR,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHF,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKJ,SAAKL,mBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,UAAU,EAAE,IAFT;AAGH,WAAGM,OAAO,CAACC;AAHR,OAAP;;AAMJ,SAAKX,qBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKJ,SAAKF,KAAL;AACI,aAAOI,KAAP;;AAEJ;AACI,aAAOA,KAAP;AA5CT;AA8CH,CA/CD","sourcesContent":["import {\r\n\tPOST_SIGNUP,\r\n\tPOST_SIGNIN,\r\n\tGET_VERIFY_NICKNAME,\r\n\tRESET_VERIFY_NICKNAME,\r\n    RESET_SIGNIN,\r\n    RESET\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    errors: {}\r\n}\r\n\r\nexport default (state=initialState,action) => {\r\n    switch(action.type){\r\n        case POST_SIGNIN:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n\r\n        case POST_SIGNUP:\r\n            return {\r\n                ...state,\r\n                ...action.info,\r\n                isFetching: true\r\n            }\r\n\r\n         case RESET_SIGNIN: \r\n           return {\r\n                 ...state,\r\n                 isFetching: false,\r\n                 errors: {}\r\n         } \r\n\r\n         case POST_SIGNUP:\r\n             return {\r\n                 ...state,\r\n                 isFetching: false\r\n             }\r\n\r\n         case GET_VERIFY_NICKNAME:\r\n             return {\r\n                 ...state,\r\n                 isFetching: true,\r\n                 ...actions.params\r\n             }    \r\n\r\n         case RESET_VERIFY_NICKNAME:\r\n             return {\r\n                 ...state,\r\n                 isFetching: false\r\n             }   \r\n             \r\n         case RESET: \r\n             return state;\r\n             \r\n         default:\r\n             return state;    \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}