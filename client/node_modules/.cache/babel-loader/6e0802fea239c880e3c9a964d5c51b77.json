{"ast":null,"code":"import { POST_MESSAGE, GET_MESSAGES, DELETE_MESSAGE, RESET } from '../actions/types';\nconst initialState = {\n  messages: [],\n  isFetching: false,\n  currentMessageIdIsDeleting: null\n};\n\npostMessage = (messages, msg) => {\n  return [...messages, msg];\n};\n\ndeleteMessage = (messages, messageId) => messages.filter(message => message.id !== messageId._id);\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case POST_MESSAGE:\n      return { ...state,\n        messages: postMessage(state.messages),\n        isFetching: true\n      };\n\n    case GET_MESSAGES:\n      return { ...state,\n        isFetching: true\n      };\n\n    case DELETE_MESSAGE:\n      return { ...state,\n        isFetching: true,\n        messages: deleteMessage(state.messages, action.message),\n        currentMessageIdIsDeleting: action.message\n      };\n\n    case RESET:\n      return state;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/JavascriptProjects2/socketChatApp/client/src/reducers/messages.js"],"names":["POST_MESSAGE","GET_MESSAGES","DELETE_MESSAGE","RESET","initialState","messages","isFetching","currentMessageIdIsDeleting","postMessage","msg","deleteMessage","messageId","filter","message","id","_id","state","action","type"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,YAArB,EAAkCC,cAAlC,EAAiDC,KAAjD,QAA6D,kBAA7D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,0BAA0B,EAAE;AAHX,CAArB;;AAMAC,WAAW,GAAG,CAACH,QAAD,EAAUI,GAAV,KAAkB;AAC5B,SAAO,CAAC,GAAGJ,QAAJ,EAAaI,GAAb,CAAP;AACH,CAFD;;AAIAC,aAAa,GAAG,CAACL,QAAD,EAAUM,SAAV,KAAwBN,QAAQ,CAACO,MAAT,CAAgBC,OAAO,IAAKA,OAAO,CAACC,EAAR,KAAeH,SAAS,CAACI,GAArD,CAAxC;;AAEA,gBAAe,CAACC,KAAK,GAACZ,YAAP,EAAoBa,MAApB,KAA+B;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKlB,YAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHX,QAAAA,QAAQ,EAAEG,WAAW,CAACQ,KAAK,CAACX,QAAP,CAFlB;AAGHC,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAMJ,SAAKL,YAAL;AACG,aAAO,EACH,GAAGe,KADA;AAEHV,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAKH,SAAKJ,cAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHV,QAAAA,UAAU,EAAE,IAFT;AAGHD,QAAAA,QAAQ,EAAEK,aAAa,CAACM,KAAK,CAACX,QAAP,EAAgBY,MAAM,CAACJ,OAAvB,CAHpB;AAIHN,QAAAA,0BAA0B,EAAEU,MAAM,CAACJ;AAJhC,OAAP;;AAOJ,SAAKV,KAAL;AACI,aAAOa,KAAP;;AACJ;AACM,aAAOA,KAAP;AAzBV;AA2BH,CA5BD","sourcesContent":["import {POST_MESSAGE,GET_MESSAGES,DELETE_MESSAGE,RESET} from '../actions/types';\r\n\r\nconst initialState = {\r\n    messages: [],\r\n    isFetching: false,\r\n    currentMessageIdIsDeleting: null\r\n}\r\n\r\npostMessage = (messages,msg) => {\r\n    return [...messages,msg];\r\n}\r\n\r\ndeleteMessage = (messages,messageId) => messages.filter(message =>  message.id !== messageId._id);\r\n\r\nexport default (state=initialState,action) => {\r\n    switch(action.type){\r\n        case POST_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: postMessage(state.messages,),\r\n                isFetching: true\r\n            }\r\n\r\n        case GET_MESSAGES: \r\n           return {\r\n               ...state,\r\n               isFetching: true\r\n           }  \r\n\r\n        case DELETE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                messages: deleteMessage(state.messages,action.message),\r\n                currentMessageIdIsDeleting: action.message\r\n            } \r\n            \r\n        case RESET:\r\n            return state;\r\n        default:\r\n              return state;        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}