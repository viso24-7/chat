{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects2\\\\socketChatApp\\\\client\\\\src\\\\components\\\\others\\\\form\\\\Form.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { initForm, updateForm } from '../../../actions/form';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createDebounces = () => {\n      const {\n        debounceValidation\n      } = this.props;\n      const debounces = {};\n\n      _.mapKeys(debounceValidation, (value, key) => {\n        debounces[key] = _.debounce(this.handleDebounceValidation, value);\n      });\n\n      return debounces;\n    };\n\n    this.handleDebounceValidation = (key, value) => {\n      const formData = this.getFormData();\n      const {\n        errors\n      } = formData;\n      const {\n        validateAsync,\n        formName\n      } = this.props;\n\n      if (!errors[key]) {\n        validateAsync(key, value, formName);\n        this.validateForm(true, [key]);\n      }\n    };\n\n    this.getFormData = () => {\n      const {\n        formData,\n        formName\n      } = this.props;\n      return formData[formName];\n    };\n\n    this.validateForm = (resetErrors, keys) => {\n      const {\n        validate\n      } = this.props;\n      const formData = this.getFormData();\n      const {\n        values,\n        errors\n      } = formData;\n      this.updateFormData({\n        errors: validate ? validate(values, errors, resetErrors, keys) : {}\n      });\n    };\n\n    this.updateFormData = params => {\n      const {\n        dispatch,\n        formName\n      } = this.props;\n      dispatch(updateForm(formName, { ...params\n      }));\n    };\n\n    this.setTouched = keys => {\n      const formData = this.getFormData();\n      const {\n        touched\n      } = formData;\n      keys.forEach(key => {\n        touched[key] = true;\n      });\n      this.updateFormData({\n        touched\n      });\n    };\n\n    this.getMyFormParams = () => {\n      const myFormParams = this.getFormData() || {\n        values: {},\n        errors: {},\n        touched: {}\n      };\n      return myFormParams;\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name: key,\n        value\n      } = e.target;\n      const formData = this.getFormData();\n      const {\n        values\n      } = formData;\n      values[key] = value;\n      const {\n        debounces\n      } = this.state;\n      const debounce = debounces[key];\n      this.updateFormData({\n        values\n      });\n      this.setTouched([key]);\n      this.validateForm(true, [key]);\n      if (debounce) debounce(key, value);\n    };\n\n    this.handleFocus = e => {\n      e.preventDefault();\n      const {\n        name: key\n      } = e.target;\n      this.validateForm(false, [key]);\n    };\n\n    this.handleBlur = e => {\n      e.preventDefault();\n      const {\n        name: key\n      } = e.target;\n      this.setTouched([key]);\n      this.validateForm(false, [key]);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        handleSubmit,\n        formName\n      } = this.props;\n      const formData = this.getFormData();\n      const {\n        values,\n        errors\n      } = formData;\n      this.validateForm(false, _.keys(values));\n      this.setTouched(_.keys(values));\n\n      if (_.isEmpty(errors)) {\n        handleSubmit(values, formName);\n      }\n    };\n\n    this.state = {\n      handleChange: this.handleChange,\n      handleFocus: this.handleFocus,\n      handleBlur: this.handleBlur,\n      handleSubmit: this.handleSubmit,\n      debounces: this.createDebounces()\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch,\n      values,\n      formName\n    } = this.props;\n    dispatch(initForm(formName, {\n      values,\n      errors: {},\n      touched: {}\n    }));\n  }\n\n  render() {\n    const {\n      render\n    } = this.props;\n    const myFormParams = this.getFormData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, render({ ...this.state,\n      form: { ...myFormParams\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  formData: state.form\n});\n\nexport default connect(mapStateToProps)(Form);","map":{"version":3,"sources":["C:/JavascriptProjects2/socketChatApp/client/src/components/others/form/Form.js"],"names":["React","Component","connect","_","initForm","updateForm","Form","constructor","props","createDebounces","debounceValidation","debounces","mapKeys","value","key","debounce","handleDebounceValidation","formData","getFormData","errors","validateAsync","formName","validateForm","resetErrors","keys","validate","values","updateFormData","params","dispatch","setTouched","touched","forEach","getMyFormParams","myFormParams","handleChange","e","preventDefault","name","target","state","handleFocus","handleBlur","handleSubmit","isEmpty","componentDidMount","render","form","mapStateToProps"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initForm,updateForm} from '../../../actions/form';\r\n\r\nclass Form extends Component{\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\thandleChange: this.handleChange,\r\n\t\t\thandleFocus: this.handleFocus,\r\n\t\t\thandleBlur: this.handleBlur,\r\n\t\t\thandleSubmit: this.handleSubmit,\r\n\t\t\tdebounces: this.createDebounces()\r\n\t\t};\r\n    }\r\n    \r\n    componentDidMount(){\r\n        const {dispatch,values,formName} = this.props;\r\n        dispatch(initForm(formName,{values,errors:{},touched:{}}))\r\n    }\r\n\r\n    createDebounces = () => {\r\n        const {debounceValidation} = this.props;\r\n        const debounces = {};\r\n       \r\n        _.mapKeys(debounceValidation,(value,key) => {\r\n            debounces[key] = _.debounce(this.handleDebounceValidation,value);\r\n        });\r\n        return debounces;\r\n    }\r\n\r\n    handleDebounceValidation = (key,value) => {\r\n        const formData = this.getFormData();\r\n        const {errors} = formData;\r\n        const {validateAsync,formName} = this.props;\r\n        \r\n        if(!errors[key]){\r\n            validateAsync(key,value,formName);\r\n            this.validateForm(true,[key]);\r\n        }\r\n    }\r\n\r\n    getFormData = () => {\r\n        const {formData,formName} = this.props;\r\n        return formData[formName];\r\n    }\r\n   \r\n    validateForm = (resetErrors,keys) => {\r\n         const {validate} = this.props;\r\n         const formData = this.getFormData();\r\n         const {values,errors} = formData;\r\n\r\n         this.updateFormData({errors: validate ? validate(values,errors,resetErrors,keys) : {} })\r\n    }\r\n\r\n    updateFormData = params => {\r\n       const {dispatch,formName} = this.props;\r\n       dispatch(updateForm(formName,{...params}))\r\n    }\r\n\r\n    setTouched = (keys) => {\r\n       const formData = this.getFormData();\r\n       const {touched} = formData;\r\n   \r\n       keys.forEach(key => { touched[key] = true; });\r\n       this.updateFormData({touched});\r\n    }\r\n\r\n    getMyFormParams = () => {\r\n        const myFormParams = this.getFormData() || {values:{},errors:{},touched:{}};\r\n        return myFormParams;\r\n    }\r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        const {name:key,value} = e.target;\r\n        const formData = this.getFormData();\r\n        const {values} = formData;\r\n        values[key] = value;\r\n        const {debounces} = this.state;\r\n        const debounce = debounces[key];\r\n\r\n        this.updateFormData({values});\r\n        this.setTouched([key]);\r\n        this.validateForm(true,[key]);\r\n        if(debounce) debounce(key,value);\r\n    }\r\n\r\n    handleFocus = e => {\r\n        e.preventDefault();\r\n        const {name:key} = e.target;\r\n        this.validateForm(false,[key]);\r\n    }\r\n\r\n    handleBlur = e => {\r\n        e.preventDefault();\r\n        const {name:key} = e.target;\r\n        this.setTouched([key]);\r\n        this.validateForm(false,[key]);\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {handleSubmit,formName} = this.props;\r\n        const formData = this.getFormData();\r\n        const {values,errors} = formData;\r\n\r\n        this.validateForm(false,_.keys(values));\r\n        this.setTouched(_.keys(values));\r\n        if(_.isEmpty(errors)){\r\n            handleSubmit(values,formName);\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const {render} = this.props;\r\n        const myFormParams = this.getFormData();\r\n        \r\n        return (\r\n            <div>\r\n                {render({...this.state,form:{...myFormParams}})}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    formData: state.form\r\n})\r\n\r\nexport default connect(mapStateToProps)(Form);"]},"metadata":{},"sourceType":"module"}