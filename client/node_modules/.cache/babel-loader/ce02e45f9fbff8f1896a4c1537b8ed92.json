{"ast":null,"code":"import { POST_ADD_CONTACT, RESET_ADD_CONTACT, GET_CONTACTS, RESET_GET_CONTACTS, DELETE_CONTACT, REMOVE_CONTACT, RESET } from '../actions/types';\nconst initialState = {\n  contacts: [],\n  successMessage: [],\n  result: [],\n  errors: {},\n  isFetching: false,\n  currentContactIdIsDeleting: null\n};\n\nconst addContacts = (contacts, con) => {\n  return [...contacts, con];\n};\n\nconst deleteContact = (contacts, contactId) => contacts.filter(c => c.contactId !== contactId);\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state,\n        result: action.contacts,\n        isFetching: true\n      };\n\n    case RESET_GET_CONTACTS:\n      return { ...state,\n        result: [],\n        isFetching: false\n      };\n\n    case POST_ADD_CONTACT:\n      return { ...state,\n        result: addContacts(state.contacts, action.contact),\n        isFetching: false\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        result: deleteContact(state.result, action.contact.contactId),\n        currentContactIdIsDeleting: action.contact.contactId,\n        isFetching: true\n      };\n\n    case RESET_ADD_CONTACT:\n      return { ...state,\n        errors: {},\n        successMessage: [],\n        isFetching: false\n      };\n\n    case REMOVE_CONTACT:\n      return { ...state,\n        result: deleteContact(state.result, action.contact.contactId)\n      };\n\n    case RESET:\n      return state;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/JavascriptProjects2/socketChatApp/client/src/reducers/contact.js"],"names":["POST_ADD_CONTACT","RESET_ADD_CONTACT","GET_CONTACTS","RESET_GET_CONTACTS","DELETE_CONTACT","REMOVE_CONTACT","RESET","initialState","contacts","successMessage","result","errors","isFetching","currentContactIdIsDeleting","addContacts","con","deleteContact","contactId","filter","c","state","action","type","contact"],"mappings":"AAAA,SACCA,gBADD,EAECC,iBAFD,EAGCC,YAHD,EAICC,kBAJD,EAKCC,cALD,EAMIC,cANJ,EAOIC,KAPJ,QAQO,kBARP;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,MAAM,EAAE,EAHS;AAIjBC,EAAAA,MAAM,EAAE,EAJS;AAKjBC,EAAAA,UAAU,EAAE,KALK;AAMjBC,EAAAA,0BAA0B,EAAE;AANX,CAArB;;AASA,MAAMC,WAAW,GAAG,CAACN,QAAD,EAAUO,GAAV,KAAkB;AAClC,SAAO,CAAC,GAAGP,QAAJ,EAAaO,GAAb,CAAP;AACH,CAFD;;AAGA,MAAMC,aAAa,GAAG,CAACR,QAAD,EAAUS,SAAV,KAAwBT,QAAQ,CAACU,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACF,SAAF,KAAgBA,SAArC,CAA9C;;AAEA,gBAAe,CAACG,KAAK,GAACb,YAAP,EAAoBc,MAApB,KAA+B;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKpB,YAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHV,QAAAA,MAAM,EAAEW,MAAM,CAACb,QAFZ;AAGHI,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAMJ,SAAKT,kBAAL;AACG,aAAO,EACH,GAAGiB,KADA;AAEHV,QAAAA,MAAM,EAAE,EAFL;AAGHE,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAMH,SAAKZ,gBAAL;AACK,aAAO,EACH,GAAGoB,KADA;AAEHV,QAAAA,MAAM,EAAEI,WAAW,CAACM,KAAK,CAACZ,QAAP,EAAgBa,MAAM,CAACE,OAAvB,CAFhB;AAGHX,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAML,SAAKR,cAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHV,QAAAA,MAAM,EAAEM,aAAa,CAACI,KAAK,CAACV,MAAP,EAAcW,MAAM,CAACE,OAAP,CAAeN,SAA7B,CAFlB;AAGHJ,QAAAA,0BAA0B,EAAEQ,MAAM,CAACE,OAAP,CAAeN,SAHxC;AAIHL,QAAAA,UAAU,EAAE;AAJT,OAAP;;AAOH,SAAKX,iBAAL;AACI,aAAO,EACH,GAAGmB,KADA;AAEHT,QAAAA,MAAM,EAAE,EAFL;AAGHF,QAAAA,cAAc,EAAC,EAHZ;AAIHG,QAAAA,UAAU,EAAE;AAJT,OAAP;;AAOJ,SAAKP,cAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHV,QAAAA,MAAM,EAAEM,aAAa,CAACI,KAAK,CAACV,MAAP,EAAcW,MAAM,CAACE,OAAP,CAAeN,SAA7B;AAFlB,OAAP;;AAKH,SAAKX,KAAL;AACK,aAAOc,KAAP;;AACL;AACI,aAAOA,KAAP;AA/CV;AAiDH,CAlDD","sourcesContent":["import {\r\n\tPOST_ADD_CONTACT,\r\n\tRESET_ADD_CONTACT,\r\n\tGET_CONTACTS,\r\n\tRESET_GET_CONTACTS,\r\n\tDELETE_CONTACT,\r\n    REMOVE_CONTACT,\r\n    RESET\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    contacts: [],\r\n    successMessage: [],\r\n    result: [],\r\n    errors: {},\r\n    isFetching: false,\r\n    currentContactIdIsDeleting: null\r\n}\r\n\r\nconst addContacts = (contacts,con) => {\r\n    return [...contacts,con];\r\n} \r\nconst deleteContact = (contacts,contactId) => contacts.filter(c => c.contactId !== contactId); \r\n\r\nexport default (state=initialState,action) => {\r\n    switch(action.type){\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                result: action.contacts,\r\n                isFetching: true\r\n            }\r\n        \r\n        case RESET_GET_CONTACTS: \r\n           return {\r\n               ...state,\r\n               result: [],\r\n               isFetching: false\r\n           }    \r\n\r\n        case POST_ADD_CONTACT:\r\n             return {\r\n                 ...state,\r\n                 result: addContacts(state.contacts,action.contact),\r\n                 isFetching: false\r\n             }\r\n       \r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                result: deleteContact(state.result,action.contact.contactId),\r\n                currentContactIdIsDeleting: action.contact.contactId,\r\n                isFetching: true\r\n            }\r\n\r\n         case RESET_ADD_CONTACT:\r\n             return {\r\n                 ...state,\r\n                 errors: {},\r\n                 successMessage:[],\r\n                 isFetching: false\r\n             }   \r\n\r\n         case REMOVE_CONTACT:\r\n             return {\r\n                 ...state,\r\n                 result: deleteContact(state.result,action.contact.contactId)\r\n             }  \r\n             \r\n          case RESET: \r\n               return state;\r\n          default:\r\n              return state;        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}