{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects2\\\\socketChatApp\\\\client\\\\src\\\\components\\\\entries\\\\sign-in\\\\SignInForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { resetSignIn, postSignIn } from '../../../actions/auth';\nimport Form from '../../others/form/Form';\nimport Input from '../../others/input/Input';\nimport Button from '../../others/button/Button';\nimport FlashMessage from '../../others/flash-message/FlashMessage';\n\nclass SignInForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onCloseFlashMessage = () => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(resetSignIn());\n    };\n  }\n\n  render() {\n    const {\n      auth: signIn,\n      dispatch\n    } = this.props;\n    const {\n      errors\n    } = signIn;\n    return /*#__PURE__*/React.createElement(Form, {\n      formName: \"SignInForm\",\n      values: {\n        nickname: '',\n        password: ''\n      },\n      handleSubmit: values => {\n        if (!signIn.isFetching) {\n          dispatch(postSignIn(values));\n        }\n      },\n      render: ({\n        handleChange,\n        handleSubmit,\n        form\n      }) => {\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }\n        }, errors.nickname ? /*#__PURE__*/React.createElement(FlashMessage, {\n          error: true,\n          width: 280,\n          message: errors.nickname,\n          onClose: this.onCloseFlashMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 32\n          }\n        }) : null, /*#__PURE__*/React.createElement(Input, {\n          name: \"nickname\",\n          placeholder: \"Your Nickname\",\n          type: \"text\",\n          onChange: handleChange,\n          width: 280,\n          maxLength: 12,\n          defaultButton: true,\n          margin: \"13px 0px 13px 0px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(Input, {\n          name: \"password\",\n          placeholder: \"Password\",\n          type: \"password\",\n          onChange: handleChange,\n          width: 280,\n          maxLength: 12,\n          defaultButton: true,\n          margin: \"13px 0px 13px 0px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          primary: true,\n          text: \"Sign Up\",\n          width: 280,\n          isFetching: signIn.isFetching,\n          margin: \"24px 0px 0px 0px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 27\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(SignInForm);","map":{"version":3,"sources":["C:/JavascriptProjects2/socketChatApp/client/src/components/entries/sign-in/SignInForm.js"],"names":["React","Component","connect","resetSignIn","postSignIn","Form","Input","Button","FlashMessage","SignInForm","onCloseFlashMessage","dispatch","props","render","auth","signIn","errors","nickname","password","values","isFetching","handleChange","handleSubmit","form","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAoBC,UAApB,QAAqC,uBAArC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAkC;AAAA;AAAA;;AAAA,SAC/BS,mBAD+B,GACT,MAAM;AACxB,YAAM;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAxB;AACAD,MAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACH,KAJ8B;AAAA;;AAM/BU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,IAAI,EAACC,MAAN;AAAaJ,MAAAA;AAAb,QAAyB,KAAKC,KAApC;AACA,UAAM;AAACI,MAAAA;AAAD,QAAWD,MAAjB;AAEA,wBACI,oBAAC,IAAD;AACI,MAAA,QAAQ,EAAC,YADb;AAEI,MAAA,MAAM,EAAE;AAACE,QAAAA,QAAQ,EAAC,EAAV;AAAaC,QAAAA,QAAQ,EAAC;AAAtB,OAFZ;AAGI,MAAA,YAAY,EAAEC,MAAM,IAAI;AACpB,YAAG,CAACJ,MAAM,CAACK,UAAX,EAAsB;AAClBT,UAAAA,QAAQ,CAACP,UAAU,CAACe,MAAD,CAAX,CAAR;AACH;AAAC,OANV;AAOI,MAAA,MAAM,EAAE,CAAC;AAACE,QAAAA,YAAD;AAAcC,QAAAA,YAAd;AAA2BC,QAAAA;AAA3B,OAAD,KAAsC;AAC1C,4BACI;AAAM,UAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKN,MAAM,CAACC,QAAP,gBACG,oBAAC,YAAD;AAAc,UAAA,KAAK,MAAnB;AAAoB,UAAA,KAAK,EAAE,GAA3B;AAAgC,UAAA,OAAO,EAAED,MAAM,CAACC,QAAhD;AAA0D,UAAA,OAAO,EAAE,KAAKP,mBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH,GAEK,IAHV,eAKG,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,WAAW,EAAC,eAAnC;AAAmD,UAAA,IAAI,EAAC,MAAxD;AAA+D,UAAA,QAAQ,EAAEW,YAAzE;AAAuF,UAAA,KAAK,EAAE,GAA9F;AACO,UAAA,SAAS,EAAE,EADlB;AACsB,UAAA,aAAa,MADnC;AACoC,UAAA,MAAM,EAAC,mBAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALH,eAOG,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,WAAW,EAAC,UAAnC;AAA8C,UAAA,IAAI,EAAC,UAAnD;AAA8D,UAAA,QAAQ,EAAEA,YAAxE;AAAsF,UAAA,KAAK,EAAE,GAA7F;AACO,UAAA,SAAS,EAAE,EADlB;AACsB,UAAA,aAAa,MADnC;AACoC,UAAA,MAAM,EAAC,mBAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPH,eASG,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,MAA7B;AAA8B,UAAA,IAAI,EAAC,SAAnC;AAA6C,UAAA,KAAK,EAAE,GAApD;AAAyD,UAAA,UAAU,EAAEN,MAAM,CAACK,UAA5E;AACQ,UAAA,MAAM,EAAC,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATH,CADJ;AAcH,OAtBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AA0BH;;AApC8B;;AAuClC,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADkB,CAAL,CAA7B;;AAGA,eAAeZ,OAAO,CAACsB,eAAD,CAAP,CAAyBf,UAAzB,CAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {resetSignIn,postSignIn} from '../../../actions/auth';\r\nimport Form from '../../others/form/Form';\r\nimport Input from '../../others/input/Input';\r\nimport Button from '../../others/button/Button';\r\nimport FlashMessage from '../../others/flash-message/FlashMessage';\r\n\r\nclass SignInForm extends Component{\r\n   onCloseFlashMessage = () => {\r\n       const {dispatch} = this.props;\r\n       dispatch(resetSignIn())\r\n   }\r\n\r\n   render(){\r\n       const {auth:signIn,dispatch} = this.props;\r\n       const {errors} = signIn;\r\n\r\n       return (\r\n           <Form\r\n               formName=\"SignInForm\"\r\n               values={{nickname:'',password:''}}\r\n               handleSubmit={values => {\r\n                   if(!signIn.isFetching){\r\n                       dispatch(postSignIn(values))\r\n                   }}}\r\n               render={({handleChange,handleSubmit,form}) => {\r\n                   return (\r\n                       <form onSubmit={handleSubmit}>\r\n                           {errors.nickname ? (\r\n                               <FlashMessage error width={280} message={errors.nickname} onClose={this.onCloseFlashMessage} />\r\n                             ) : null}\r\n\r\n                          <Input name=\"nickname\" placeholder=\"Your Nickname\" type=\"text\" onChange={handleChange} width={280}\r\n                                 maxLength={12} defaultButton margin=\"13px 0px 13px 0px\" />\r\n                          <Input name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} width={280} \r\n                                 maxLength={12} defaultButton margin=\"13px 0px 13px 0px\" />\r\n                          <Button type=\"submit\" primary text=\"Sign Up\" width={280} isFetching={signIn.isFetching} \r\n                                  margin=\"24px 0px 0px 0px\"  />\r\n                       </form>\r\n                   )\r\n               }}    \r\n           />\r\n       )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(SignInForm)"]},"metadata":{},"sourceType":"module"}