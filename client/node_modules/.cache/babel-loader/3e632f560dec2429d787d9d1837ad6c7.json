{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects2\\\\socketChatApp\\\\client\\\\src\\\\components\\\\entries\\\\sign-up\\\\SignUpForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { postSignUp, getVerifyNickname } from '../../../actions/auth';\nimport Icon from '../../others/icon/Icon';\nimport Form from '../../others/form/Form';\nimport Input from '../../others/input/Input';\nimport Button from '../../others/button/Button';\nimport Loading from '../../others/loading/Loading';\n\nclass SignUpForm extends Component {\n  render() {\n    const {\n      auth: {\n        verifyNickname,\n        signUp\n      },\n      dispatch\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Form, {\n      formName: \"SignUpForm\",\n      values: {\n        nickname: '',\n        password: '',\n        confirmPassword: ''\n      },\n      handleSubmit: (values, formName) => {\n        if (!signUp.isFetching) {\n          dispatch(postSignUp(values, formName));\n        }\n      },\n      validate: (values, errors, resetErrors, keys) => {\n        const {\n          newErrors\n        } = errors;\n        const {\n          nickname,\n          password,\n          confirmPassword\n        } = values;\n\n        if (_.includes(keys, 'nickname')) {\n          if (resetErrors) {\n            delete newErrors.nickname;\n          }\n\n          if (!nickname) {\n            newErrors.nickname = \"Please enter your nickname\";\n          } else if (nickname.length < 6 || nickname.length > 13) {\n            newErrors.nickname = \"Nickname must be between 6 and 13 charcters\";\n          }\n        }\n\n        if (_.includes(keys, 'password') || _.includes(keys, 'confirmPassword')) {\n          if (resetErrors) {\n            delete newErrors.password;\n            delete newErrors.confirmPassword;\n          }\n\n          if (!password) {\n            newErrors.password = \"Please enter your password\";\n          } else if (password.length < 8 || password.length > 15) {\n            newErrors.password = \"Password must be between 8 and 15 characters\";\n          } else if (!confirmPassword) {\n            newErrors.confirmPassword = \"Please confirm your password\";\n          } else if (password === confirmPassword) {\n            newErrors.confirmPassword = \"password doesnt match\";\n          }\n        }\n\n        return newErrors;\n      },\n      validateAsync: (key, value, formName) => {\n        if (key === 'nickname') {\n          const params = {\n            body: {\n              nickname: value\n            },\n            formName\n          };\n          dispatch(getVerifyNickname(...params));\n        }\n      },\n      debounceValidation: {\n        nickname: 300\n      },\n      render: ({\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        handleFocus,\n        form\n      }) => {\n        const {\n          touched,\n          errors,\n          values\n        } = form;\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          name: \"nickname\",\n          placeholder: \"Nickname\",\n          type: \"text\",\n          hasError: touched.nickname && errors.nickname,\n          errorMessage: errors.nickname,\n          onChange: handleChange,\n          onFocus: handleFocus,\n          onBlur: handleBlur,\n          width: 200,\n          maxLength: 12,\n          defaultLabel: true,\n          iconRight: true,\n          iconComponent: () => {\n            if (values.nickname.length > 0) {\n              if (verifyNickname.isFetching) {\n                return /*#__PURE__*/React.createElement(Loading, {\n                  type: \"donut\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 57\n                  }\n                });\n              }\n\n              if (!_.isEmpty(verifyNickname.errors)) {\n                return /*#__PURE__*/React.createElement(Icon, {\n                  fill: \"#da7079\",\n                  icon: \"alert\",\n                  height: 26,\n                  width: 26,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 57\n                  }\n                });\n              }\n\n              if (!(touched.nickname && errors.nickname)) {\n                return /*#__PURE__*/React.createElement(Icon, {\n                  fill: \"#55c37c\",\n                  icon: \"checked\",\n                  height: 24,\n                  width: 24,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 57\n                  }\n                });\n              }\n            }\n\n            return null;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Input, {\n          name: \"password\",\n          placeholder: \"Password\",\n          type: \"password\",\n          hasError: touched.password && errors.password,\n          errorMessage: errors.password,\n          onChange: handleChange,\n          onFocus: handleFocus,\n          onBlur: handleBlur,\n          width: 200,\n          maxLength: 12,\n          defaultLabel: true,\n          margin: \"13px 0px 13px 0px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Input, {\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          type: \"password\",\n          hasError: touched.confirmPassword && errors.confirmPassword,\n          errorMessage: errors.confirmPassword,\n          onChange: handleChange,\n          onFocus: handleFocus,\n          onBlur: handleBlur,\n          width: 200,\n          maxLength: 12,\n          defaultLabel: true,\n          margin: \"13px 0px 13px 0px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          primary: true,\n          text: \"Sign Up\",\n          isFetching: signUp.isFetching,\n          disabled: verifyNickname.isFetching,\n          margin: \"24px 0px 0px 0px\",\n          width: 280,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(SignUpForm);","map":{"version":3,"sources":["C:/JavascriptProjects2/socketChatApp/client/src/components/entries/sign-up/SignUpForm.js"],"names":["React","Component","connect","_","postSignUp","getVerifyNickname","Icon","Form","Input","Button","Loading","SignUpForm","render","auth","verifyNickname","signUp","dispatch","props","nickname","password","confirmPassword","values","formName","isFetching","errors","resetErrors","keys","newErrors","includes","length","key","value","params","body","handleChange","handleSubmit","handleBlur","handleFocus","form","touched","isEmpty","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {postSignUp,getVerifyNickname} from '../../../actions/auth';\r\nimport Icon from '../../others/icon/Icon';\r\nimport Form from '../../others/form/Form';\r\nimport Input from '../../others/input/Input';\r\nimport Button from '../../others/button/Button';\r\nimport Loading from '../../others/loading/Loading';\r\n\r\nclass SignUpForm extends Component{\r\n   render(){\r\n       const {auth:{verifyNickname,signUp},dispatch} = this.props;\r\n\r\n       return (\r\n           <Form\r\n               formName=\"SignUpForm\"\r\n               values={{nickname:'',password:'',confirmPassword: ''}}\r\n               handleSubmit={(values,formName) => {\r\n                   if(!signUp.isFetching){\r\n                       dispatch(postSignUp(values,formName))\r\n                   }}}\r\n               validate={(values,errors,resetErrors,keys) => {\r\n                   const {newErrors} = errors;\r\n                   const {nickname,password,confirmPassword} = values;\r\n\r\n                   if(_.includes(keys,'nickname')){\r\n                       if(resetErrors){ delete newErrors.nickname; }\r\n                       if(!nickname){ newErrors.nickname = \"Please enter your nickname\" }\r\n                       else if(nickname.length < 6 || nickname.length > 13){\r\n                           newErrors.nickname = \"Nickname must be between 6 and 13 charcters\"\r\n                       }\r\n                   }\r\n\r\n                   if(_.includes(keys,'password') || _.includes(keys,'confirmPassword')){\r\n                       if(resetErrors){ \r\n                           delete newErrors.password;\r\n                           delete newErrors.confirmPassword;\r\n                       }\r\n\r\n                       if(!password){\r\n                           newErrors.password = \"Please enter your password\";\r\n                       } else if(password.length < 8 || password.length > 15){\r\n                           newErrors.password = \"Password must be between 8 and 15 characters\"\r\n                       } else if(!confirmPassword){\r\n                           newErrors.confirmPassword = \"Please confirm your password\"\r\n                       } else if( password === confirmPassword){\r\n                           newErrors.confirmPassword = \"password doesnt match\"\r\n                       }\r\n                   }\r\n\r\n                   return newErrors;\r\n                   }}  \r\n\r\n                validateAsync={(key,value,formName) => {\r\n                    if(key === 'nickname'){\r\n                        const params = {body:{nickname:value},formName};\r\n                        dispatch(getVerifyNickname(...params))\r\n                 }}}\r\n                debounceValidation={{nickname:300}}\r\n                render={({handleChange,handleSubmit,handleBlur,handleFocus,form}) => {\r\n                    const {touched,errors,values} = form;\r\n\r\n                    return (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <Input name=\"nickname\" placeholder=\"Nickname\" type=\"text\" hasError={touched.nickname && errors.nickname} \r\n                                   errorMessage={errors.nickname} onChange={handleChange} onFocus={handleFocus} onBlur={handleBlur} width={200}\r\n                                   maxLength={12} defaultLabel iconRight iconComponent={() => {\r\n                                        if(values.nickname.length > 0){\r\n                                            if(verifyNickname.isFetching){\r\n                                                return (<Loading type=\"donut\" />)\r\n                                            }\r\n\r\n                                            if(!_.isEmpty(verifyNickname.errors)){\r\n                                                return (<Icon fill=\"#da7079\" icon=\"alert\" height={26} width={26} />)\r\n                                            }\r\n\r\n                                            if(!(touched.nickname && errors.nickname)){\r\n                                                return (<Icon fill=\"#55c37c\" icon=\"checked\" height={24} width={24} />)\r\n                                            }\r\n                                       }\r\n                                  return null;      \r\n                            }} />\r\n\r\n                            <Input name=\"password\" placeholder=\"Password\" type=\"password\" hasError={touched.password && errors.password} \r\n                                   errorMessage={errors.password} onChange={handleChange} onFocus={handleFocus} onBlur={handleBlur} width={200}\r\n                                   maxLength={12} defaultLabel margin=\"13px 0px 13px 0px\" />\r\n                            <Input name=\"confirmPassword\" placeholder=\"Confirm Password\" type=\"password\" hasError={touched.confirmPassword && errors.confirmPassword} \r\n                                   errorMessage={errors.confirmPassword} onChange={handleChange} onFocus={handleFocus} onBlur={handleBlur} width={200}\r\n                                   maxLength={12} defaultLabel margin=\"13px 0px 13px 0px\" />\r\n                            <Button type=\"submit\" primary text=\"Sign Up\" isFetching={signUp.isFetching} disabled={verifyNickname.isFetching} margin=\"24px 0px 0px 0px\" width={280} />       \r\n                        </form>\r\n                    )\r\n                }} \r\n           />\r\n       )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(SignUpForm);"]},"metadata":{},"sourceType":"module"}