{"ast":null,"code":"var _jsxFileName = \"C:\\\\JavascriptProjects2\\\\socketChatApp\\\\client\\\\src\\\\components\\\\others\\\\drop-down-menu\\\\DropdownMenu.js\";\nimport React, { Component } from 'react';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport onClickOutside from 'react-onclickoutside';\nimport Icon from '../icon/Icon';\nimport Label from '../label/Label';\nimport Button from '../button/Button';\nimport './DropDownMenu.scss';\n\nclass DropDownMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = e => {\n      const {\n        isOpen\n      } = this.state;\n\n      if (this.dropDownWrapper.current) {\n        if (!this.dropDownWrapper.current.contains(e.target)) {\n          if (isOpen) {\n            this.changeDropDownStatus(false, false);\n          }\n        }\n      }\n    };\n\n    this.changeDropDownStatus = (toggle, newIsOpen) => {\n      const {\n        isOpen\n      } = this.state;\n      const {\n        onChange\n      } = this.props;\n      const isOpenState = toggle ? !isOpen : newIsOpen;\n\n      if (onChange) {\n        onChange(isOpenState);\n      }\n\n      this.setState({\n        isOpen: isOpenState\n      });\n    };\n\n    this.dropDownWrapper = React.createRef();\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      isOpen\n    } = this.state;\n    const {\n      options,\n      icon,\n      marginButton\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drop-down-menu-wrapper\",\n      ref: this.dropDownWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Manager, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Reference, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, ({\n      ref\n    }) => /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      width: icon.width,\n      height: icon.height,\n      margin: marginButton,\n      link: true,\n      setRef: ref,\n      onClick: () => this.changeDropDownStatus(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Icon, Object.assign({}, icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    })))), isOpen && /*#__PURE__*/React.createElement(Popper, {\n      placement: \"bottom-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, ({\n      ref,\n      style,\n      placement\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      ref: ref,\n      className: \"drop-down-menu fadeIn\",\n      \"data-placement\": placement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 36\n      }\n    }, options.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      link: true,\n      onClick: () => {\n        this.changeDropDownStatus(false, false);\n        item.event();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      regular: true,\n      dark: true,\n      breakWord: true,\n      alignCenter: true,\n      text: item.text,\n      fontSize: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 51\n      }\n    })))))))));\n  }\n\n}\n\nexport default onClickOutside(DropDownMenu);","map":{"version":3,"sources":["C:/JavascriptProjects2/socketChatApp/client/src/components/others/drop-down-menu/DropdownMenu.js"],"names":["React","Component","Manager","Reference","Popper","onClickOutside","Icon","Label","Button","DropDownMenu","constructor","props","handleClickOutside","e","isOpen","state","dropDownWrapper","current","contains","target","changeDropDownStatus","toggle","newIsOpen","onChange","isOpenState","setState","createRef","render","options","icon","marginButton","ref","width","height","style","placement","map","item","index","event","text"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {Manager,Reference,Popper} from 'react-popper';\r\nimport onClickOutside from 'react-onclickoutside';\r\nimport Icon from '../icon/Icon';\r\nimport Label from '../label/Label'\r\nimport Button from '../button/Button';\r\nimport './DropDownMenu.scss';\r\n\r\n class DropDownMenu extends Component{\r\n     constructor(props){\r\n         super(props);\r\n         this.dropDownWrapper = React.createRef();\r\n         this.state = { isOpen: false}\r\n     }\r\n\r\n     handleClickOutside = e => {\r\n         const {isOpen} = this.state;\r\n         if(this.dropDownWrapper.current){\r\n             if(!this.dropDownWrapper.current.contains(e.target)){\r\n                 if(isOpen){\r\n                     this.changeDropDownStatus(false,false);\r\n                 }\r\n             }\r\n         }\r\n     }\r\n\r\n     changeDropDownStatus = (toggle,newIsOpen) => {\r\n          const {isOpen} = this.state;\r\n          const {onChange} = this.props;\r\n\r\n          const isOpenState = toggle ? (!isOpen) : (newIsOpen);\r\n          if(onChange){ onChange(isOpenState) }\r\n          this.setState({ isOpen: isOpenState })\r\n     }\r\n\r\n     render(){\r\n        const {isOpen} = this.state;\r\n        const {options,icon,marginButton} = this.props;\r\n\r\n        return (\r\n            <div className=\"drop-down-menu-wrapper\" ref={this.dropDownWrapper}>\r\n                <Manager>\r\n                    <Reference>\r\n                        {({ref}) => (\r\n                            <Button type='button' width={icon.width} height={icon.height} margin={marginButton} link setRef={ref} onClick={() => this.changeDropDownStatus(true)}>\r\n                                <Icon {...icon} />\r\n                            </Button>\r\n                        )}\r\n                    </Reference>\r\n                    {isOpen && (\r\n                        <Popper placement=\"bottom-end\">\r\n                            { ({ref,style,placement}) => (\r\n                                <div style={style} ref={ref} className=\"drop-down-menu fadeIn\" data-placement={placement}>\r\n                                   <ul>\r\n                                       {options.map((item,index) => (\r\n                                           <li key={index}>\r\n                                              <Button link onClick={() => {\r\n                                                  this.changeDropDownStatus(false,false);\r\n                                                  item.event();\r\n                                                  }}>\r\n                                                  <Label regular dark breakWord alignCenter text={item.text} fontSize={14} />\r\n                                              </Button>\r\n                                           </li>\r\n                                       ))}\r\n                                   </ul>\r\n                                </div>\r\n                            )}\r\n                        </Popper>\r\n                    )}\r\n                </Manager>\r\n            </div>\r\n        )\r\n     }\r\n }\r\n\r\n export default onClickOutside(DropDownMenu);"]},"metadata":{},"sourceType":"module"}